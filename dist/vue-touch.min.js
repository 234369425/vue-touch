!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(require("hammerjs")):"function"==typeof define&&define.amd?define(["hammerjs"],n):n(e.Hammer)}(this,function(e){"use strict";function n(e){for(var n=[],t=arguments.length-1;t-- >0;)n[t]=arguments[t+1];for(var i=0;i<n.length;i++)for(var r=n[i],o=Object.keys(r),s=0;s<o.length;s++){var a=o[s];e[a]=r[a]}return e}function t(){return{type:Object,default:function(){return{}}}}function i(e){return e.charAt(0).toUpperCase()+e.slice(1)}function r(n){var t=n.direction;if("string"==typeof t){var i="DIRECTION_"+t.toUpperCase();o.indexOf(t)>-1&&e.hasOwnProperty(i)?n.direction=e[i]:console.warn("[vue-touch] invalid direction: "+t)}return n}e="default"in e?e.default:e;var o=["up","down","left","right","horizontal","vertical","all"],s={},a={},p=["pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap"],c={pan:"pan",panstart:"pan",panmove:"pan",panend:"pan",pancancel:"pan",panleft:"pan",panright:"pan",panup:"pan",pandown:"pan",pinch:"pinch",pinchstart:"pinch",pinchmove:"pinch",pinchend:"pinch",pinchcancel:"pinch",pinchin:"pinch",pinchout:"pinch",press:"press",pressup:"press",rotate:"rotate",rotatestart:"rotate",rotatemove:"rotate",rotateend:"rotate",rotatecancel:"rotate",swipe:"swipe",swipeleft:"swipe",swiperight:"swipe",swipeup:"swipe",swipedown:"swipe",tap:"tap"},u={props:{tapOptions:t(),panOptions:t(),pinchOptions:t(),pressOptions:t(),rotateOptions:t(),swipeOptions:t(),tag:{type:String,default:"div"}},mounted:function(){this.$isServer||(this.hammer=new e.Manager(this.$el),this.recognizers={},this.setupBuiltinRecognizers(),this.setupCustomRecognizers())},destroyed:function(){this.$isServer||this.hammer.destroy()},methods:{setupBuiltinRecognizers:function(){for(var e=this,t=0;t<p.length;t++){var i=p[t];if(e._events[i]){var r=c[i],o=n({},s[r]||{},e[r+"Options"]);e.addRecognizer(r,o),e.addEvent(i)}}},setupCustomRecognizers:function(){for(var e=this,t=Object.keys(a),i=0;i<t.length;i++){var r=t[i];if(e._events[r]){var o=a[r],s=e[r+"Options"]||{},p=n({},o,s);e.addRecognizer(r,p,{mainGesture:p.type}),e.addEvent(r)}}},addRecognizer:function(n,t,o){void 0===o&&(o={});var s=o.mainGesture;if(!this.recognizers[n]){var a=new(e[i(s||n)])(r(t));this.recognizers[n]=a,this.hammer.add(a),a.recognizeWith(this.hammer.recognizers)}},addEvent:function(e){var n=this;this.hammer.on(e,function(t){return n.$emit(e,t)})},enable:function(e){this.recognizers[e].set({enable:!0})},disable:function(e){this.recognizers[e].set({enable:!1})},enableAll:function(e){this.toggleAll({enable:!0})},disableAll:function(e){this.toggleAll({enable:!1})},toggleAll:function(e){for(var n=this,t=e.enable,i=Object.keys(this.recognizers),r=0;r<i.length;r++){var o=n.recognizers[i[r]];o.set({enable:t})}},isEnabled:function(e){return this.recognizers[e]&&this.recognizers[e].options.enable}},render:function(e){return e(this.tag,{},this.$slots.default)}},h=!1,d={config:s,customEvents:a};d.install=function(e,t){void 0===t&&(t={});var i=t.name||"v-touch";e.component(i,n(u,{name:i})),h=!0}.bind(d),d.registerCustomEvent=function(e,n){return void 0===n&&(n={}),h?void console.warn("\n      [vue-touch]: Custom Event '"+e+"' couldn't be added to vue-touch.\n      Custom Events have to be registered before installing the plugin.\n      "):(n.event=e,a[e]=n,void(u.props[e+"Options"]={type:Object,default:function(){return{}}}))}.bind(d),"object"==typeof exports?module.exports=d:"function"==typeof define&&define.amd?define([],function(){return d}):window.Vue&&(window.VueTouch=d,Vue.use(d))});
